#!/bin/bash

source $HOME/.config/hypr/scripts/HYPR_VARS

# WLAN-Menü Funktion
wlan_menu() {
    while true; do
        INTERFACE="wlan0"  # Passe dies an deine WLAN-Schnittstelle an
        STATUS=$(nmcli radio wifi)
        CONNECTED=$(nmcli -t -f DEVICE,STATE dev status | grep "$INTERFACE" | awk '{print $2}')
        OPTIONS=""

        if [ "$STATUS" = "enabled" ]; then
            OPTIONS="󰖪 Disable"  # Ändert "Enable" zu "Disable", wenn WLAN eingeschaltet ist
            if [ "$CONNECTED" = "connected" ]; then
                OPTIONS="$OPTIONS\n󱘖 Connect\n Disconnect"
            fi
            OPTIONS="$OPTIONS\n󰍉 Scan\n Saved"
        else
            OPTIONS=" Enable"  # Wenn WLAN deaktiviert ist
        fi
        OPTIONS="󰌍 Back\n$OPTIONS"

        CHOICE=$(echo -e "$OPTIONS" | $RofiMenuAlt -theme-str 'configuration{show-icons:false;} entry{enabled:false;} textbox-prompt-colon{enabled:false;}' -p "WLAN Menu")

        if [ $? -ne 0 ]; then
            break
        fi

        case "$CHOICE" in
            " Enable")
                nmcli radio wifi on
                break ;;
            "󰖪 Disable")
                nmcli radio wifi off
                break ;;
            "󱘖 Connect")
                connect_to_network ;;
            "󰍉 Scan")
                scan_for_networks ;;
            " Saved")
                manage_saved_networks ;;
            "󰌍 Back")
		$HyprScriptsDir/settings ;;
            *)
                echo "Invalid choice" ;;
        esac
    done
}

# Funktion zum Scannen nach Netzwerken
scan_for_networks() {
    while true; do
        nmcli -f SSID device wifi rescan  # Netzwerke scannen
        AVAILABLE_NETWORKS=$(nmcli -f SSID device wifi | tail -n +2 | sed 's/^\s*//;s/\s*$//' | sort -u | sed 's/^--$/<unknown>/')  # "--" in <unknown> umbenennen und doppelte SSIDs entfernen

        if [ -z "$AVAILABLE_NETWORKS" ]; then
            echo "No networks found" | $RofiMenuAlt
            return
        fi

        SSID=$(echo -e "󰌍 Back\n$AVAILABLE_NETWORKS" | $RofiMenuAlt -theme-str 'configuration{show-icons:false;} entry{enabled:false;} textbox-prompt-colon{enabled:false;}' -p "Select a network:")

        if [ $? -ne 0 ] || [ "$SSID" = "󰌍 Back" ]; then
            break
        fi

        if [ -n "$SSID" ]; then
            connect_to_selected_network "$SSID"
            break  # Menü nach der Verbindung schließen
        fi
    done
}

# Funktion zum Verbinden mit einem Netzwerk
connect_to_selected_network() {
    local SSID=$1

    # Prüfen, ob das Netzwerk bereits gespeichert ist
    if nmcli -f NAME connection show | grep -q "$SSID"; then
        nmcli device wifi connect "$SSID"
    else
        kitty sh -c "echo 'Please enter the password for $SSID:' && read -s PASSWORD && nmcli device wifi connect '$SSID' password '$PASSWORD'"
    fi
}

# Funktion zum Bearbeiten gespeicherter Netzwerke
manage_saved_networks() {
    while true; do
        SAVED_NETWORKS=$(nmcli connection show | grep -i wifi | awk '{print $1}')

        if [ -z "$SAVED_NETWORKS" ]; then
            echo "No saved networks found" | $RofiMenuAlt
            return
        fi

        NETWORK=$(echo -e "󰌍 Back\n$SAVED_NETWORKS" | $RofiMenuAlt -theme-str 'configuration{show-icons:false;} entry{enabled:false;} textbox-prompt-colon{enabled:false;}' -p "Select a network to edit:")

        if [ $? -ne 0 ] || [ "$NETWORK" = "󰌍 Back" ]; then
            break
        fi

        ACTION=$(echo -e "󰌍 Back\n󱘖 Connect\n󰆴 Delete" | $RofiMenuAlt -theme-str 'configuration{show-icons:false;} entry{enabled:false;} textbox-prompt-colon{enabled:false;}' -p "Actions for $NETWORK:")

        if [ "$ACTION" = "󰆴 Delete" ]; then
            CONFIRM=$(echo -e "󰄴 Yes\n No" | $RofiMenuAlt -theme-str 'configuration{show-icons:false;} entry{enabled:false;} textbox-prompt-colon{enabled:false;}' -p "Are you sure you want to delete $NETWORK?")
            if [ "$CONFIRM" = "󰄴 Yes" ]; then
                nmcli connection delete "$NETWORK"
                echo "$NETWORK deleted successfully" | $RofiMenuAlt
            fi
        elif [ "$ACTION" = "󱘖 Connect" ]; then
            nmcli device wifi connect "$NETWORK"  # Verbinden mit dem ausgewählten Netzwerk
            break  # Menü nach der Verbindung schließen
        fi
    done
}

wlan_menu

